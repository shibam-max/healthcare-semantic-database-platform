# Healthcare Platform Configuration
spring:
  application:
    name: healthcare-semantic-platform
  
  # Database Configuration with Vector Support
  datasource:
    url: jdbc:postgresql://localhost:5432/healthcare_db?currentSchema=public
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Vector Database Configuration
  ai:
    openai:
      api-key: ${OPENAI_API_KEY:your-openai-api-key}
      embedding:
        model: text-embedding-ada-002
    vectorstore:
      pgvector:
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1536

  # Big Data Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: healthcare-platform
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/healthcare}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8080/realms/healthcare/protocol/openid-connect/certs}

# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  s3:
    bucket-name: ${AWS_S3_BUCKET:healthcare-documents}
  cloudwatch:
    namespace: HealthcarePlatform

# Healthcare Application Configuration
healthcare:
  fhir:
    server-base: ${FHIR_SERVER_BASE:http://localhost:8080/fhir}
    version: R4
  
  vector-search:
    similarity-threshold: 0.8
    max-results: 50
  
  audit:
    enabled: true
    retention-days: 2555  # 7 years for HIPAA compliance

# Monitoring Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,openapi,swagger-ui
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

# Logging Configuration
logging:
  level:
    io.healthcareplatform: DEBUG
    org.springframework.security: DEBUG
    org.springframework.ai: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /api/v1